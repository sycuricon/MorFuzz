diff --git a/p/riscv_test.h b/p/riscv_test.h
index baad787..89d51f2 100644
--- a/p/riscv_test.h
+++ b/p/riscv_test.h
@@ -138,6 +138,7 @@ handle_exception:                                                       \
         /* some unhandlable exception occurred */                       \
   1:    ori TESTNUM, TESTNUM, 1337;                                     \
   write_tohost:                                                         \
+	      li TESTNUM, 1;							                                    \
         sw TESTNUM, tohost, t5;                                         \
         j write_tohost;                                                 \
 reset_vector:                                                           \
diff --git a/v/vm.c b/v/vm.c
index 6ab7fd1..d53ea39 100644
--- a/v/vm.c
+++ b/v/vm.c
@@ -30,17 +30,6 @@ static uint64_t lfsr63(uint64_t x)
   return (x >> 1) | (bit << 62);
 }
 
-static void cputchar(int x)
-{
-  do_tohost(0x0101000000000000 | (unsigned char)x);
-}
-
-static void cputstring(const char* s)
-{
-  while (*s)
-    cputchar(*s++);
-}
-
 static void terminate(int code)
 {
   do_tohost(code);
@@ -49,15 +38,14 @@ static void terminate(int code)
 
 void wtf()
 {
-  terminate(841);
+  terminate(1);
 }
 
 #define stringify1(x) #x
 #define stringify(x) stringify1(x)
 #define assert(x) do { \
   if (x) break; \
-  cputstring("Assertion failed: " stringify(x) "\n"); \
-  terminate(3); \
+  terminate(1); \
 } while(0)
 
 #define l1pt pt[0]
@@ -78,19 +66,6 @@ freelist_t user_mapping[MAX_TEST_PAGES];
 freelist_t freelist_nodes[MAX_TEST_PAGES];
 freelist_t *freelist_head, *freelist_tail;
 
-void printhex(uint64_t x)
-{
-  char str[17];
-  for (int i = 0; i < 16; i++)
-  {
-    str[15-i] = (x & 0xF) + ((x & 0xF) < 10 ? '0' : 'a'-10);
-    x >>= 4;
-  }
-  str[16] = 0;
-
-  cputstring(str);
-}
-
 static void evict(unsigned long addr)
 {
   assert(addr >= PGSIZE && addr < MAX_TEST_PAGES * PGSIZE);
@@ -168,7 +143,7 @@ void handle_trap(trapframe_t* tf)
     for (long i = 1; i < MAX_TEST_PAGES; i++)
       evict(i*PGSIZE);
 
-    terminate(n);
+    terminate(1);
   }
   else if (tf->cause == CAUSE_ILLEGAL_INSTRUCTION)
   {
